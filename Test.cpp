#include <iostream>
#include <fstream>
#include <chrono>
#include "SortArray.h"

int main() {
	int array[] = {
		8413, 9917, 5236, 1644, 4512, 7173, 3616, 2606, 8762, 2968, 595, 4903, 7077, 3509, 533, 5523, 1192, 7378, 8718, 2400,
		1526, 9543, 7403, 5739, 7022, 4550, 1729, 8374, 8270, 5057, 7043, 9447, 2021, 6520, 8678, 318, 2911, 6552, 5918, 1261,
		9798, 3218, 7419, 7224, 5974, 7891, 6016, 2067, 5388, 7616, 9049, 662, 4565, 152, 2879, 6512, 3339, 5830, 7233, 6079,
		8902, 5612, 6074, 2702, 3413, 8211, 4000, 3944, 4572, 4153, 6029, 8199, 9909, 8906, 2366, 8938, 5137, 53, 5446, 8063,
		6352, 7986, 771, 83, 2023, 5403, 3755, 4400, 4454, 6181, 5513, 8894, 6183, 5798, 4103, 3950, 4903, 7215, 2379, 5405,
		4657, 4988, 9835, 8752, 1523, 6932, 7747, 1880, 7191, 1478, 6963, 3430, 4594, 5934, 6836, 6599, 8647, 2323, 8404, 8731,
		8716, 4294, 8172, 4126, 4354, 5885, 9127, 3302, 6283, 5380, 9258, 4274, 112, 8930, 8840, 4960, 1645, 3395, 2501, 2400,
		3475, 660, 2484, 1218, 3858, 7992, 1089, 1509, 2378, 8351, 949, 388, 550, 7582, 4680, 487, 8420, 2702, 944, 9178, 9288,
		7572, 499, 8736, 7603, 938, 1798, 20, 448, 3984, 2175, 8067, 3220, 8862, 3777, 5629, 5134, 2563, 5471, 3895, 1527, 3672,
		1002, 5993, 7381, 2963, 7321, 5227, 755, 6425, 6004, 7112, 8018, 7794, 652, 33, 8160, 8385, 1882, 5760, 9752, 5566, 6095,
		8148, 606, 5243, 5008, 3658, 309, 9759, 9966, 5848, 1882, 3230, 3969, 3310, 5938, 5840, 7671, 632, 9229, 4237, 454, 7033,
		4348, 8013, 4156, 5167, 5262, 1700, 6177, 6886, 2186, 701, 7755, 7647, 3416, 9660, 5470, 9443, 2629, 6728, 2486, 1078, 5786,
		2140, 7477, 7932, 9249, 4498, 6145, 1990, 3294, 1618, 6381, 8131, 3060, 4537, 5030, 1631, 980, 7746, 989, 9808, 9187, 1048,
		4675, 8106, 6760, 4693, 5785, 9294, 881, 2098, 3362, 1784, 5486, 5464, 8737, 7237, 4350, 1830, 2464, 8770, 5857, 6471, 5899,
		6036, 3737, 3153, 7215, 3667, 4814, 45, 695, 2756, 6557, 8212, 9410, 1434, 288, 2804, 2244, 4000, 7196, 8310, 3621, 2662, 1238,
		8881, 8225, 6104, 2880, 4577, 5548, 7018, 6420, 5404, 9500, 5341, 5863, 8986, 1861, 8923, 7836, 5469, 1022, 8633, 376, 2041,
		9257, 9530, 1813, 9524, 3181, 8859, 6062, 5010, 4637, 9806, 4781, 6489, 7413, 9637, 3204, 1600, 607, 7845, 6083, 8971, 4281,
		4079, 9053, 3705, 4948, 8917, 4068, 443, 3297, 9789, 9566, 4586, 9567, 9240, 802, 316, 7401, 8972, 6018, 7229, 8335, 1016, 7277,
		9325, 9691, 8646, 7288, 3957, 2612, 6542, 5122, 5711, 6685, 5327, 6758, 2358, 8403, 6092, 5706, 2561, 443, 9632, 8179, 8266, 5677,
		2082, 6921, 4006, 847, 91, 846, 6034, 6086, 1182, 2436, 958, 7505, 8135, 6602, 2927, 519, 5370, 8131, 9706, 4084, 5654, 3189, 8033,
		2132, 709, 7869, 1218, 8602, 1535, 2300, 7941, 2788, 9162, 3360, 3578, 3739, 2482, 1243, 5748, 3136, 8289, 4663, 2925, 8968, 6163
	};
	int size = sizeof(array) / sizeof(array[0]);
	std::ofstream output;

	output.open("time.txt");

	std::cout << "Unsorted array:\n";
	SortArray::peek(array);

	std::chrono::steady_clock::time_point start = std::chrono::steady_clock::now();
	SortArray::insertionSort(array, size);
	std::chrono::steady_clock::time_point end = std::chrono::steady_clock::now();

	std::cout << "Sorted array:\n";
	SortArray::peek(array);

	std::cout << "Algorithm: Insertion Sort\n" << "Elapsed time: " << std::chrono::duration_cast<std::chrono::microseconds>(end - start).count() << "us\n";
	output << "n=" << size << "\nAlgorithm: Insertion Sort\n" << "Elapsed time: " << std::chrono::duration_cast<std::chrono::microseconds>(end - start).count() << "us";

	output.close();

	int array1[] = { 5, 9, 2 }, array2[] = { 1, 19, 3, 6 };
	int size1 = sizeof(array1) / sizeof(array1[0]), size2 = sizeof(array2) / sizeof(array2[0]);
	int *array3 = new int[size1 + size2];

	std::cout << "Unsorted first array:\n";
	SortArray::print(array1, size1);
	std::cout << "Unsorted second array:\n";
	SortArray::print(array2, size2);

	SortArray::twoWayMergeSort(array1, size1, array2, size2, array3);

	std::cout << "Merged and sorted third array:\n";
	SortArray::print(array3, size1 + size2);

	delete[] array3;

	return 0;
}